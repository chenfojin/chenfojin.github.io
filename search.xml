<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>https解密</title>
      <link href="/2023/09/04/https-jie-mi/"/>
      <url>/2023/09/04/https-jie-mi/</url>
      
        <content type="html"><![CDATA[<h4 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h4><p>加密和解密使用的密钥是相同的，密钥只能通过线下传输；</p><h4 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h4><p>非对称加密的私钥放在服务端，不会再互联网传输，保证私钥私密性；</p><p>公钥在互联网随意传播，客户端信息通过公钥加密，就算报文被截获没有私钥也无法解密；</p><p><img src="/medias/https%E8%A7%A3%E5%AF%86/image-20220614105206458.png"></p><h4 id="数字证书"><a href="#数字证书" class="headerlink" title="数字证书"></a>数字证书</h4><p><a href="https://cloud.tencent.com/developer/article/1548350">密钥生成命令参考</a></p><p><a href="https://yakir-yang.github.io/2018/08/09/Tools-%E7%8E%A9%E8%BD%AC-SSL-%E8%AF%81%E4%B9%A6/">证书关系含义参考</a></p><p>key：密钥，包含公钥和私钥；</p><p>csr：Certificate Signing Request，证书签发请求；</p><p>crt：certificate缩写，指证书包含公钥和证书信息；</p><p>ca：Certificate Authotiry，证书授权中心；</p><p><img src="/medias/https%E8%A7%A3%E5%AF%86/image-20221215142633686.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成CA机构的私钥</span>openssl genrsa <span class="token parameter variable">-out</span> ca.key <span class="token number">1024</span><span class="token comment"># 生成CA机构自己的证书申请文件</span>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> ca.key <span class="token parameter variable">-out</span> ca.csr<span class="token comment"># CA机构用自己的私钥和证书申请文件生成自己签名的证书，俗称自签名证书，也叫根证书</span>openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> ca.csr <span class="token parameter variable">-signkey</span> ca.key <span class="token parameter variable">-out</span> ca.crt<span class="token comment"># 生成服务器私钥</span>openssl genrsa <span class="token parameter variable">-out</span> server.key <span class="token number">1024</span><span class="token comment"># 根据服务器私钥文件生成证书申请文件</span>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> server.key <span class="token parameter variable">-out</span> server.csr<span class="token comment"># 指定证书申请文件内容</span><span class="token parameter variable">-subj</span> /C<span class="token operator">=</span>CN/ST<span class="token operator">=</span>Guangdong/L<span class="token operator">=</span>Shenzhen/CN<span class="token operator">=</span>chenfojin/O<span class="token operator">=</span>cola/OU<span class="token operator">=</span><span class="token string">"Tech Support"</span>/emailAddress<span class="token operator">=</span><span class="token number">996538464</span>@qq.comC<span class="token comment"># country国家</span>ST<span class="token comment"># state/provice省份</span>L<span class="token comment"># locality城市</span>CN<span class="token comment"># common name通用名（公司）</span>O<span class="token comment"># 组织</span>OU<span class="token comment"># 组织单位</span><span class="token comment"># 根据CA机构的根证书、CA机构的私钥ca.key、服务器的证书申请文件server.csr生成服务端证书</span>openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">365</span> <span class="token parameter variable">-CA</span> ca.crt <span class="token parameter variable">-CAkey</span> ca.key <span class="token punctuation">\</span><span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-in</span> server.csr <span class="token parameter variable">-out</span> server.crt<span class="token comment"># 查看证书内容</span>openssl x509 <span class="token parameter variable">-in</span> server.crt <span class="token parameter variable">-noout</span> <span class="token parameter variable">-text</span> Issuer<span class="token comment"># 发行人</span>Subject<span class="token comment"># 被发行证书机构</span>Signature Algorithm<span class="token comment"># 签名算法</span><span class="token comment"># crt转p12</span>openssl pkcs12 <span class="token parameter variable">-export</span> <span class="token parameter variable">-in</span> server.crt <span class="token parameter variable">-inkey</span> server.key <span class="token punctuation">\</span><span class="token parameter variable">-out</span> server.p12 <span class="token parameter variable">-password</span> pass:123456<span class="token comment"># p12转jks</span>keytool <span class="token parameter variable">-importkeystore</span> <span class="token parameter variable">-srckeystore</span> server.p12 <span class="token punctuation">\</span><span class="token parameter variable">-destkeystore</span> server.keystore <span class="token parameter variable">-deststoretype</span> pkcs12 <span class="token punctuation">\</span><span class="token parameter variable">-srcstorepass</span> <span class="token number">123456</span> <span class="token parameter variable">-deststorepass</span> <span class="token number">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简易步骤，测试时可以使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成服务器私钥</span>openssl genrsa <span class="token parameter variable">-out</span> server.key <span class="token number">1024</span><span class="token comment"># 根据服务器私钥文件生成证书申请文件</span>openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> server.key <span class="token parameter variable">-out</span> server.csr<span class="token comment"># 直接用第一步的私钥和第二步的请求文件生成证书</span>openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> server.csr <span class="token parameter variable">-out</span> server.crt <span class="token parameter variable">-signkey</span> server.key <span class="token parameter variable">-days</span> <span class="token number">3650</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>NET::ERR_CERT_COMMON_NAME_INVALID：它的安全证书没有指定主题备用名称</strong></p><p>SubjectAltName是X509 Version 3 (RFC 2459)的扩展，允许ssl证书指定多个可以匹配的名称。</p><p>SubjectAltName 可以包含email 地址，ip地址，正则匹配DNS主机名，等等。</p><p>ssl这样的一个特性叫做：SubjectAlternativeName（简称：san）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 帮助文档</span><span class="token function">man</span> x509v3_config<span class="token comment"># 签发证书时指定主题备用名</span><span class="token function">cat</span> <span class="token operator">&gt;</span> ext.ini <span class="token operator">&lt;&lt;</span> <span class="token string">EOFsubjectAltName = @alt_names[alt_names]DNS.1 = *.cnDNS.2 = *.comIP.1 = 192.168.197.28IP.2 = 192.168.197.29EOF</span>openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">365</span> <span class="token parameter variable">-CA</span> ca.crt <span class="token parameter variable">-CAkey</span> ca.key <span class="token punctuation">\</span><span class="token parameter variable">-CAcreateserial</span> <span class="token parameter variable">-in</span> server.csr <span class="token parameter variable">-out</span> server.crt <span class="token punctuation">\</span><span class="token parameter variable">-extfile</span> ext.ini<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="简易nginx环境"><a href="#简易nginx环境" class="headerlink" title="简易nginx环境"></a>简易nginx环境</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server <span class="token punctuation">{</span>    listen <span class="token number">443</span> ssl<span class="token punctuation">;</span>    server_name _<span class="token punctuation">;</span>    ssl_certificate /root/key/pem/server.pem<span class="token punctuation">;</span>    ssl_certificate_key /root/key/pem/private.pem<span class="token punctuation">;</span>    ssl_session_timeout 5m<span class="token punctuation">;</span>    ssl_ciphers PSK-AES256-CBC-SHA:PSK-AES128-CBC-SHA:AES256-GCM-SHA384<span class="token punctuation">;</span>    ssl_protocols TLSv1 TLSv1.1 TLSv1.2<span class="token punctuation">;</span>    ssl_prefer_server_ciphers on<span class="token punctuation">;</span>    location / <span class="token punctuation">{</span>        root /var/log/nginx<span class="token punctuation">;</span>        index cfj.html<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="https"><a href="#https" class="headerlink" title="https"></a>https</h4><p><a href="https://ssoor.github.io/2020/03/25/https-ssl/">https和加密套件参考</a></p><p><a href="https://mp.weixin.qq.com/s/U9SRLE7jZTB6lUZ6c8gTKg">图解https</a></p><h5 id="http和https区别"><a href="#http和https区别" class="headerlink" title="http和https区别"></a>http和https区别</h5><p>https在tcp和http之间添加了一层ssl/tls协议；</p><p><img src="/medias/https%E8%A7%A3%E5%AF%86/image-20220622144832489.png"></p><h5 id="加密套件"><a href="#加密套件" class="headerlink" title="加密套件"></a>加密套件</h5><p>加密套件格式：「<strong>密钥交换算法 + 签名算法 + 对称加密算法 + 摘要算法</strong>」</p><p>不同的密钥交换算法握手过程不同；</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">openssl ciphers <span class="token parameter variable">-v</span><span class="token comment"># kx密钥交换算法，au身份验证  </span>ECDHE-RSA-AES256-GCM-SHA384 TLSv1.2 <span class="token assign-left variable">Kx</span><span class="token operator">=</span>ECDH     <span class="token assign-left variable">Au</span><span class="token operator">=</span>RSA  <span class="token assign-left variable">Enc</span><span class="token operator">=</span>AESGCM<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token assign-left variable">Mac</span><span class="token operator">=</span>AEADDH-DSS-AES256-GCM-SHA384 TLSv1.2 <span class="token assign-left variable">Kx</span><span class="token operator">=</span>DH/DSS   <span class="token assign-left variable">Au</span><span class="token operator">=</span>DH   <span class="token assign-left variable">Enc</span><span class="token operator">=</span>AESGCM<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token assign-left variable">Mac</span><span class="token operator">=</span>AEADAES256-GCM-SHA384       TLSv1.2 <span class="token assign-left variable">Kx</span><span class="token operator">=</span>RSA      <span class="token assign-left variable">Au</span><span class="token operator">=</span>RSA  <span class="token assign-left variable">Enc</span><span class="token operator">=</span>AESGCM<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span> <span class="token assign-left variable">Mac</span><span class="token operator">=</span>AEAD<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="RSA握手"><a href="#RSA握手" class="headerlink" title="RSA握手"></a>RSA握手</h5><p>缺陷：一旦服务端私钥泄露，所有会话的premaster都能被解密，所有tls密文都会被破解；</p><p><img src="/medias/https%E8%A7%A3%E5%AF%86/image-20220622145324542.png"></p><p><img src="/medias/https%E8%A7%A3%E5%AF%86/image-20220622150910854.png"></p><h5 id="DH握手"><a href="#DH握手" class="headerlink" title="DH握手"></a>DH握手</h5><p>DH（Diffie-Hellman）握手区别主要在于：<br>客户端和客户端各自生成随机数，并以此作为私钥，再根据DH算法算出公钥，通过tls握手交换公钥；<br>然后双方根据自己持有的私钥和对方公钥算出随机数，随机数值双方都是一样的，作为后续对称加密使用的密钥；</p><p>这样第三方就算截取了tls报文，在没有私钥的情况下也无法计算出密钥；<br>而且每次对称密钥都是实时生成的，实现前向保密；</p><p><img src="/medias/https%E8%A7%A3%E5%AF%86/image-20230731143422748.png"></p><h4 id="DH密钥交换"><a href="#DH密钥交换" class="headerlink" title="DH密钥交换"></a>DH密钥交换</h4><p>Diffie-Hellman加密流量</p><h5 id="DH算法"><a href="#DH算法" class="headerlink" title="DH算法"></a>DH算法</h5><p>算法核心其实是一个数学性质：对于模运算和指数运算，他们的顺序是可以交换的。也就是说：</p><p>(g^a mod p)^b mod p 等于 (g^b mod p)^a mod p</p><h4 id="解密DH加密流量"><a href="#解密DH加密流量" class="headerlink" title="解密DH加密流量"></a>解密DH加密流量</h4><h5 id="MITM攻击"><a href="#MITM攻击" class="headerlink" title="MITM攻击"></a>MITM攻击</h5><p>1、攻击者拦截了通信双方的公钥交换。</p><p>2、攻击者向每一方发送自己生成的公钥，而不是对方的公钥。</p><p>3、通信双方分别与攻击者建立了加密通道，而不是彼此之间。</p><p>然而，为了防止此类攻击，现代的安全协议，如SSL/TLS，通常会使用证书和数字签名等手段，确保公钥的真实性，从而阻止MITM攻击。这使得在实际的网络环境中，解密DH加密的流量是非常困难的。除非攻击者能够破解私钥，或者有其他方式获得共享的秘密密钥，否则他们无法解密通信内容。这也是DH密钥交换被广泛应用的原因之一。</p><h5 id="F5和TAP"><a href="#F5和TAP" class="headerlink" title="F5和TAP"></a>F5和TAP</h5><p>一些设备，如F5 BIG-IP平台或某些网络TAP设备，可以进行SSL/TLS的解密操作，包括使用Diffie-Hellman (DH) 或者Elliptic Curve Diffie-Hellman (ECDH) 密钥交换的流量。这主要是依赖于SSL/TLS中的”前向保密”（Forward Secrecy）特性。</p><p><strong>向前保密：</strong>SSL/TLS协议中的前向保密是指，即使长期密钥（如服务器的私钥）被泄露，之前的会话密钥（由DH或ECDH生成的）仍然是安全的。也就是说，攻击者不能使用泄露的长期密钥去解密过去的流量。这个特性非常重要，能够提供额外的安全保障。</p><p>这也意味着网络设备（如F5或TAP设备）要想解密使用DH或ECDH的SSL/TLS流量，就需要在密钥交换阶段就介入，获取每个会话的密钥。这通常通过两种方式实现：</p><p><strong>1、私钥导入</strong>：将服务器的私钥导入到设备中，让设备可以像服务器一样参与到握手过程中，获取会话密钥。</p><p><strong>2、代理模式</strong>：设备作为一个代理，与客户端和服务器分别进行握手，形成两个独立的SSL/TLS会话。设备在中间，可以解密和再加密流量。</p><p>这两种方式都需要设备能够访问到SSL/TLS会话的密钥，且通常需要对网络架构进行一定的调整。此外，私钥导入可能会增加安全风险，如果管理不当私钥泄露，可能会导致前向保密特性被破坏，而后者可能会增加网络延迟。</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh加密算法</title>
      <link href="/2023/09/04/ssh-jia-mi-suan-fa/"/>
      <url>/2023/09/04/ssh-jia-mi-suan-fa/</url>
      
        <content type="html"><![CDATA[<h4 id="设置查看ssh加密算法"><a href="#设置查看ssh加密算法" class="headerlink" title="设置查看ssh加密算法"></a>设置查看ssh加密算法</h4><p><a href="https://www.attachmate.com/documentation/rsit-unix-8-0-2-2/rsit-unix-guide/data/cipher_mac_keywords.htm">ssh配置文件参考</a></p><p>问题：xshell连接时报错，找不到匹配的算法（No matching outgoing encryption algorithm found）</p><p><img src="/medias/ssh%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/image-20220515220911153.png"></p><p>原因：xshell版本过低，使用了ssh服务端不支持的加密算法，可以在安全查看当前xshell支持的算法</p><p><img src="/medias/ssh%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/image-20220515221014020.png"></p><p><a href="https://www.arubanetworks.com/techdocs/AOS-CX/10.07/HTML/5200-7837/Content/Chp_SSH_serv/SSH_serv_cmds/ssh-key-exc-alg-1.htm#:~:text=Configures%20SSH%20to%20use%20a,key%20with%20a%20peer%20securely.">密钥详情参考</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看当前使用的加密算法</span><span class="token function">ssh</span> <span class="token parameter variable">-vv</span> root@localhost<span class="token comment">## kex algorithms（key-exchange-algorithms）密钥交换算法</span><span class="token comment">## host key algorithms 主机密钥算法</span><span class="token comment">## ciphers 用于保护通过连接传输的数据的隐私</span><span class="token comment">## macs 消息身份验证代码，维护消息完整性</span><span class="token comment">## ctos：client to server；stoc：server to client</span><span class="token comment">## 本地服务端密钥初始化提议</span>debug2: <span class="token builtin class-name">local</span> client KEXINIT proposaldebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1,ext-info-cdebug2: <span class="token function">host</span> key algorithms: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa,ssh-dssdebug2: ciphers ctos: arcfour,arcfour128debug2: ciphers stoc: arcfour,arcfour128debug2: MACs ctos: hmac-md5,hmac-sha1-96debug2: MACs stoc: hmac-md5,hmac-sha1-96<span class="token comment">## 对等服务器密钥初始化提议</span>debug2: peer server KEXINIT proposaldebug2: KEX algorithms: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1debug2: <span class="token function">host</span> key algorithms: ssh-rsa,rsa-sha2-512,rsa-sha2-256,ecdsa-sha2-nistp256,ssh-ed25519debug2: ciphers ctos: arcfour,arcfour128debug2: ciphers stoc: arcfour,arcfour128debug2: MACs ctos: hmac-md5,hmac-sha1-96debug2: MACs stoc: hmac-md5,hmac-sha1-96<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 指定加密算法</span><span class="token function">ssh</span> <span class="token parameter variable">-c</span> cipher_name <span class="token parameter variable">-m</span> mac_name root@localhost<span class="token comment"># 修改配置文件，根据ssh支持的加密算法添加修改</span><span class="token function">man</span> sshd_config<span class="token comment"># ssh服务端配置文件参考</span><span class="token function">man</span> ssh_config<span class="token comment"># ssh客户端配置文件参考</span><span class="token function">ssh</span> <span class="token parameter variable">-Q</span> cipher<span class="token comment"># 查看支持的cipher</span><span class="token function">ssh</span> <span class="token parameter variable">-Q</span> mac<span class="token comment"># 查看支持的mac</span>sshd <span class="token parameter variable">-T</span> <span class="token operator">|</span> <span class="token function">grep</span> mac<span class="token comment"># 查看当前配置文件，grep正在使用的mac或cipher</span><span class="token comment"># 修改配置文件，添加参数后重启sshd服务</span><span class="token function">vim</span> /etc/ssh/sshd_configCiphers arcfour,arcfour128MACs hmac-md5,hmac-sha1-96<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>raid5和数据穿孔</title>
      <link href="/2023/07/31/raid5-he-shu-ju-chuan-kong/"/>
      <url>/2023/07/31/raid5-he-shu-ju-chuan-kong/</url>
      
        <content type="html"><![CDATA[<h4 id="raid5工作原理"><a href="#raid5工作原理" class="headerlink" title="raid5工作原理"></a>raid5工作原理</h4><p><a href="https://www.techtarget.com/searchstorage/definition/RAID-5-redundant-array-of-independent-disks">raid5参考</a></p><p>raid5的优势主要是使用==磁盘条带化==和==奇偶校验==（disk striping and parity），拥有冗余和接近raid0的性能；</p><p>缺点是重建时间较长，重建过程中另一块盘发生损坏的话将失去所有数据；</p><p>条带化是跨不同设备存储连续数据段的过程；</p><p>当更换磁盘后，raid5可以通过奇偶校验数据重建故障驱动器；</p><p><img src="/medias/raid5%E5%92%8C%E6%95%B0%E6%8D%AE%E7%A9%BF%E5%AD%94/image-20220524232006923.png"></p><h4 id="双重故障"><a href="#双重故障" class="headerlink" title="双重故障"></a>双重故障</h4><p><a href="https://www.dell.com/support/kbdoc/zh-cn/000139251/raid-%E9%98%B5%E5%88%97-%E4%B8%AD-%E7%9A%84-%E5%8F%8C%E9%87%8D-%E6%95%85%E9%9A%9C-%E5%92%8C-%E7%A9%BF%E5%AD%94">双重故障和穿孔解释</a></p><h5 id="数据错误"><a href="#数据错误" class="headerlink" title="数据错误"></a>数据错误</h5><p>数据错误通常由坏块导致；</p><p>例如：盘片退化导致块只能间歇性检测到；读/写磁头通过附近位置时导致0和1数据被改变发生位翻转；</p><p>这种情况导致数据的“一致性”受损。 特定块上的数据的值与原始数据不同，可能不再与数据的校验和匹配。 物理 LBA （逻辑块地址）良好，可以成功写入，但当前包含不正确的数据，可能会被解释为坏块；</p><p>发生单个错误时raid5有足够的冗余使其正常运行；</p><p><img src="/medias/raid5%E5%92%8C%E6%95%B0%E6%8D%AE%E7%A9%BF%E5%AD%94/image-20220525001833925.png"></p><h5 id="双重故障-1"><a href="#双重故障-1" class="headerlink" title="双重故障"></a>双重故障</h5><p><img src="/medias/raid5%E5%92%8C%E6%95%B0%E6%8D%AE%E7%A9%BF%E5%AD%94/image-20220525002426284.png"></p><h5 id="穿孔"><a href="#穿孔" class="headerlink" title="穿孔"></a>穿孔</h5><p>穿孔又名带错重建；遇到双重故障时如果没有穿孔功能，阵列将重建失败；</p><p>穿孔后stripe中的数据将会丢失，但能够重建阵列，保护不会丢失更多数据；</p><p>发生穿孔的阵列最终必须重建，才能消除穿孔；</p><h5 id="omsa一致性检查"><a href="#omsa一致性检查" class="headerlink" title="omsa一致性检查"></a>omsa一致性检查</h5><p><a href="https://www.dell.com/support/kbdoc/zh-cn/000139796/perc-%E5%A6%82%E4%BD%95-%E4%BD%BF%E7%94%A8-openmanage-server-administrator-%E6%89%A7%E8%A1%8C-%E4%B8%80%E8%87%B4-%E6%80%A7-%E6%A3%80-%E6%9F%A5?lang=zh">参考文档</a></p><p>账号密码为操作系统账号密码；</p><p>一致性检查会检查驱动器上的坏块，比较阵列中的数据并纠正数据，以确保所有数据块正确匹配；</p><ol><li>在树视图中找到虚拟磁盘所驻留的控制器。</li><li>展开控制器对象直到显示Virtual Disks（虚拟磁盘）对象。</li><li>从虚拟磁盘的下拉菜单中选择Check Consistency（检查一致性）任务。</li><li>单击“Execute（执行）”。</li></ol><p><img src="/medias/raid5%E5%92%8C%E6%95%B0%E6%8D%AE%E7%A9%BF%E5%AD%94/image-20220531165929337.png"></p><p><img src="/medias/raid5%E5%92%8C%E6%95%B0%E6%8D%AE%E7%A9%BF%E5%AD%94/image-20220531170626556.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fio与iops</title>
      <link href="/2023/07/31/fio-yu-iops/"/>
      <url>/2023/07/31/fio-yu-iops/</url>
      
        <content type="html"><![CDATA[<h4 id="关于IOPS"><a href="#关于IOPS" class="headerlink" title="关于IOPS"></a>关于IOPS</h4><p><a href="https://www.cnblogs.com/hukey/p/12714113.html">iops详解</a></p><p>inupt/output operations per second 每秒操作读写次数</p><hr><p>有些硬件会因为其==队列深度增加而提升其性能==，这多半是因为硬盘处理队列及重新排序（reordering）的先进控制器逻辑的结果，此逻辑一般称为标记命令队列（TCQ）或原生指令排序（NCQ）。企业等级的SATA硬盘，例如Western Digital Raptor及希捷的Barracuda NL配合深队列可以提升性能到100%。==较常用在服务器的高端SCSI硬盘==，一般性能有更大的提升。</p><p>常见的IOPS平均值</p><table><thead><tr><th>设备</th><th>IOPS</th><th>接口</th></tr></thead><tbody><tr><td>7200 rpm sata盘</td><td>75-100</td><td>SATA 3Gbit/s</td></tr><tr><td>10000 rpm sata盘</td><td>125-150</td><td>SATA 3Gbit/s</td></tr><tr><td>15000 rpm sas盘</td><td>175-210</td><td>SAS(串列SCSI)</td></tr><tr><td>SSD</td><td>8600</td><td>SATA 3Gbit/s</td></tr><tr><td>Corsair Force Series GT SSD</td><td>85000</td><td>SATA 6Gbit/s</td></tr></tbody></table><blockquote><p>参考<a href="https://zh.wikipedia.org/wiki/IOPS">维基</a></p></blockquote><ul><li>寻道时间：Tseek是指将读写磁头移动至正确的磁道上所需要的时间。寻道时间越短，I/O操作越快，目前磁盘的平均寻道时间一般在3－15ms。</li><li>旋转延迟：Trotation是指盘片旋转将请求数据所在扇区移至读写磁头下方所需要的时间。旋转延迟取决于磁盘转速，通常使用磁盘旋转一周所需时间的1/2表示。比如，7200 rpm的磁盘平均旋转延迟大约为60*1000/7200/2 = 4.17ms，而转速为15000 rpm的磁盘其平均旋转延迟为2ms。</li><li>数据传输时间：Ttransfer是指完成传输所请求的数据所需要的时间，它取决于数据传输率，其值等于数据大小除以数据传输率。目前IDE/ATA能达到133MB/s，SATA II可达到300MB/s的接口数据传输率，数据传输时间通常远小于前两部分消耗时间。简单计算时可忽略。</li></ul><p>最大IOPS的理论计算方法：<br>IOPS = 1000 ms/ (寻道时间 + 旋转延迟)。可以忽略数据传输时间。</p><blockquote><p>参考<a href="https://www.huaweicloud.com/articles/82a9c1a92e128eb4441c3f0e8125adce.html">华为iops文档</a></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bw<span class="token comment"># 带宽</span>io<span class="token comment"># 总输入输出量</span>iops<span class="token comment"># 每秒io数</span>runt<span class="token comment"># 总运行时间</span>lat<span class="token punctuation">(</span>msec<span class="token punctuation">)</span><span class="token comment"># 延迟（毫秒），usec（微秒）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="fio命令"><a href="#fio命令" class="headerlink" title="fio命令"></a>fio命令</h4><p><a href="https://docs.oracle.com/en-us/iaas/Content/Block/References/samplefiocommandslinux.htm">fio参考</a><br><a href="http://blog.yufeng.info/archives/2104">iodepth深度理解</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 测试4k随机读取</span>fio <span class="token parameter variable">--filename</span><span class="token operator">=</span>device_name <span class="token parameter variable">--direct</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--rw</span><span class="token operator">=</span>randread <span class="token parameter variable">--bs</span><span class="token operator">=</span>4k <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>libaio <span class="token parameter variable">--iodepth</span><span class="token operator">=</span><span class="token number">256</span> <span class="token parameter variable">--runtime</span><span class="token operator">=</span><span class="token number">120</span> <span class="token parameter variable">--numjobs</span><span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--time_based</span> <span class="token parameter variable">--group_reporting</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>iops-test-job --eta-newline<span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--readonly</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 测试4k随机读写</span>fio <span class="token parameter variable">--filename</span><span class="token operator">=</span>/mount_point/file <span class="token parameter variable">--size</span><span class="token operator">=</span>500GB <span class="token parameter variable">--direct</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--rw</span><span class="token operator">=</span>randrw <span class="token parameter variable">--bs</span><span class="token operator">=</span>4k <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>libaio <span class="token parameter variable">--iodepth</span><span class="token operator">=</span><span class="token number">256</span> <span class="token parameter variable">--runtime</span><span class="token operator">=</span><span class="token number">120</span> <span class="token parameter variable">--numjobs</span><span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--time_based</span> <span class="token parameter variable">--group_reporting</span> <span class="token parameter variable">--name</span><span class="token operator">=</span>iops-test-job --eta-newline<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">filename<span class="token comment"># 文件（设备）名称</span>directory<span class="token comment"># filename的路径前缀</span>name<span class="token comment"># job的名字</span>direct<span class="token comment"># bool类型，true（1），表示不适用io buffer</span>ioengine<span class="token comment"># I/O引擎，默认值sync同步阻塞I/O（优点是易于理解和实现，缺点是性能较低，因为不支持并发操作），libaio是异步I/O（高性能支持并发）</span>iodepth<span class="token comment"># 使用异步I/O时用到的，direct必须为1，buffer不支持异步</span>rw<span class="token comment"># I/O模式，随机读写randread顺序读写read等</span>bs<span class="token comment"># I/O block块大小，默认4k</span>size<span class="token comment"># 指定job处理的文件的大小</span>numjobs<span class="token comment"># 指定job的克隆数（线程），测试并发工作的负载表现</span>time_based<span class="token comment"># 如果runtime指定时间内文件读写完成，将重复直到runtime时间结束</span>runtime<span class="token comment"># 指定时间停止进程，单位s</span>group_reporting<span class="token comment"># 制定了numjobs时，输出结果按组显示</span>stonewall<span class="token comment"># 启用多个作业时，在启动作业前等待先前一个作业退出</span><span class="token builtin class-name">readonly</span><span class="token comment"># 启用只读安全检查，防止任何写入操作</span>allow_mounted_write<span class="token comment"># 是否允许写操作，该测试将销毁已挂载文件系统上的数据默认false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="example"><a href="#example" class="headerlink" title="example"></a>example</h4><p>创建配置文件fio.conf，运行fio fio.conf ；</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>global<span class="token punctuation">]</span><span class="token assign-left variable">ioengine</span><span class="token operator">=</span>libaio<span class="token assign-left variable">direct</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">iodepth</span><span class="token operator">=</span><span class="token number">256</span><span class="token assign-left variable">runtime</span><span class="token operator">=</span><span class="token number">120</span><span class="token assign-left variable">numjobs</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">filename</span><span class="token operator">=</span>/home/test.db<span class="token assign-left variable">size</span><span class="token operator">=</span>1Ggroup_reportingtime_based<span class="token punctuation">[</span>4k_randread<span class="token punctuation">]</span>stonewall<span class="token assign-left variable">bs</span><span class="token operator">=</span>4k<span class="token assign-left variable">rw</span><span class="token operator">=</span>randread<span class="token punctuation">[</span>600k_seqwrite<span class="token punctuation">]</span>stonewall<span class="token assign-left variable">bs</span><span class="token operator">=</span>600k<span class="token assign-left variable">rw</span><span class="token operator">=</span>write<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>storcli用法</title>
      <link href="/2023/07/26/storcli-yong-fa/"/>
      <url>/2023/07/26/storcli-yong-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="storcli"><a href="#storcli" class="headerlink" title="storcli"></a>storcli</h2><p>StorCLI 是由 Broadcom（之前的 LSI 和 Avago Technologies）开发的，专门用于管理和配置其 MegaRAID 控制器的命令行工具。</p><p>只有带有这些控制器的 RAID 卡才能使用 StorCLI。其他厂商的 RAID 卡可能需要使用其他的管理工具。例如，HP 的 Smart Array 控制器需要使用 HP 提供的 Smart Storage Administrator (SSA) 或者 Array Configuration Utility (ACU)，而 Dell 的 PERC 控制器需要使用 Dell 提供的 OpenManage Server Administrator (OMSA)。</p><h4 id="安装storcli"><a href="#安装storcli" class="headerlink" title="安装storcli"></a>安装storcli</h4><p><a href="https://www.broadcom.cn/site-search?q=storcli">官网下载地址</a></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rpm</span> <span class="token parameter variable">-ivh</span> storcli-007.1410.0000.0000-1.noarch.rpms<span class="token comment"># 不管哪个目录rpm，最后安装完都在opt下，创建软链接方便使用</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> /opt/MegaRAID/storcli/storcli64 /bin/storcli<span class="token function">ln</span> <span class="token parameter variable">-s</span> /opt/MegaRAID/storcli/storcli64 /sbin/storcli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="日志收集"><a href="#日志收集" class="headerlink" title="日志收集"></a>日志收集</h4><p>请把收集的信息（raid1.txt、raid2.txt、SN.txt、c0.txt、c1.txt、ROC.txt、Hard.txt）回传分析</p><p>1、storcli收集阵列日志</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">storcli /c0 show events <span class="token assign-left variable">file</span><span class="token operator">=</span>raid1.txt                  <span class="token comment"># 收集日志raid1.txt，c0代表阵列卡0</span>storcli /c1 show events <span class="token assign-left variable">file</span><span class="token operator">=</span>raid2.txt                  <span class="token comment"># 收集日志raid2.txt，c1代表阵列卡1</span><span class="token comment"># 查看日志说明（得到的日志ctrl+F查找：）</span>Controller temperature threshold exceeded               <span class="token comment"># 温度高掉盘</span>0000 00                                                 <span class="token comment"># 有数据异常</span>Error                                                   <span class="token comment"># 有掉盘可能性</span>Fail                                                    <span class="token comment"># 查找阵列掉盘状态的变化</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、查看机器SN号</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dmidecode <span class="token operator">|</span> <span class="token function">grep</span> Ser <span class="token operator">&gt;&gt;</span>SN.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、掉盘故障处理</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 阵列下硬盘状态：</span>storcli /c0 show <span class="token operator">&gt;&gt;</span>c0.txtstorcli /c1 show <span class="token operator">&gt;&gt;</span>c1.txt<span class="token comment"># 过滤raid卡温度:</span>storcli /call  show all <span class="token operator">|</span> <span class="token function">grep</span> ROC<span class="token operator">&gt;&gt;</span>ROC.txt<span class="token comment"># 过滤硬盘温度--健康度:</span>storcli /call/eall/sall show all <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-Ei</span> <span class="token string">'(Det|Error|Count)'</span><span class="token operator">&gt;&gt;</span>Hard.txt<span class="token comment"># 说明：</span>Medai Error <span class="token assign-left variable">Count</span><span class="token operator">=</span><span class="token number">0</span>                             <span class="token comment"># 0代表盘没问题，不为0如3代表硬盘问题</span>Predictive Failure <span class="token assign-left variable">Count</span><span class="token operator">=</span><span class="token number">0</span>                      <span class="token comment"># 0代表盘没问题，不为0如3代表硬盘问题</span>Detailed Information                            <span class="token comment"># 表示磁盘的插槽位置，Detailed Information</span>Drive Temperature                               <span class="token comment"># 当前硬盘温度</span>Medai Error Count                               <span class="token comment"># 表示磁盘可能错误，可能是磁盘有坏道，这个值不为0值得注意，数值越大，危险系数越高</span>Other Error Count                               <span class="token comment"># 表示磁盘可能存在松动，可能需要重新再插入</span>Predictive Failure Count                        <span class="token comment"># 预测性失败统计</span>Raw Size                                        <span class="token comment"># 硬盘大小</span>ROC temperature                                 <span class="token comment"># 控制芯片温度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">storcli /call/eall/sall show all/c              <span class="token comment"># controller 控制器号</span>/e              <span class="token comment"># Enclosure  背板号，这个术语在计算机硬件中通常指的是一个物理结构，指安装硬盘的物理结构</span>/s              <span class="token comment"># slot/pd    物理硬盘的slot号</span>/v              <span class="token comment"># vd         虚拟硬盘，virtual drive</span>/f              <span class="token comment"># foreign    外部配置</span>/d              <span class="token comment"># disk group 磁盘组，一个dg可以有多个vd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="查看raid控制器"><a href="#查看raid控制器" class="headerlink" title="查看raid控制器"></a>查看raid控制器</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">storcli show              <span class="token comment"># 查看raid控制器摘要信息</span>storcli show all          <span class="token comment"># 查看raid控制器详细信息</span>storcli <span class="token builtin class-name">help</span>              <span class="token comment"># 查看帮助信息</span>storcli /c0 show alarm    <span class="token comment"># 查看蜂鸣器状态</span>storcli /c0 <span class="token builtin class-name">set</span> <span class="token assign-left variable">alarm</span><span class="token operator">=</span>on  <span class="token comment"># 启用蜂鸣器</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="物理磁盘"><a href="#物理磁盘" class="headerlink" title="物理磁盘"></a>物理磁盘</h4><h5 id="查看物理磁盘状态"><a href="#查看物理磁盘状态" class="headerlink" title="查看物理磁盘状态"></a>查看物理磁盘状态</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看所有控制器 所有背板 背板上的所有磁盘的详细信息</span>storcli /call/eall/sall show all<span class="token comment"># 主要关注以下几项</span>Medai Error <span class="token assign-left variable">Count</span><span class="token operator">=</span><span class="token number">0</span>             <span class="token comment"># 0代表盘没问题，不为0如3代表硬盘问题</span>Predictive Failure <span class="token assign-left variable">Count</span><span class="token operator">=</span><span class="token number">0</span>      <span class="token comment"># 0代表盘没问题，不为0如3代表硬盘问题</span>Detailed Information            <span class="token comment"># 表示磁盘的插槽位置，Detailed Information</span>Drive Temperature               <span class="token comment"># 当前硬盘温度</span>Medai Error Count               <span class="token comment"># 表示磁盘可能错误，可能是磁盘有坏道，这个值不为0值得注意，数值越大，危险系数越高</span>Other Error Count               <span class="token comment"># 表示磁盘可能存在松动，可能需要重新再插入</span>Predictive Failure Count        <span class="token comment"># 预测性失败统计</span>Raw Size                        <span class="token comment"># 硬盘大小</span>ROC temperature                 <span class="token comment"># 控制芯片温度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/storcli%E7%94%A8%E6%B3%95/image-20230724142453492.png"></p><h5 id="设置磁盘状态"><a href="#设置磁盘状态" class="headerlink" title="设置磁盘状态"></a>设置磁盘状态</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看所有控制器 所有背板 背板上的所有磁盘的详细信息</span>storcli /call/eall/sall show all<span class="token comment"># 设置控制器 0 背板252槽位号为1的磁盘状态为good</span>storcli /c0/e252/s1 <span class="token builtin class-name">set</span> good<span class="token comment"># 设置控制器 0 背板252槽位号为1的磁盘状态为offline</span>storcli /c0/e252/s1 <span class="token builtin class-name">set</span> offline<span class="token comment"># 设置控制器为0 背板为252槽位号为1的磁盘状态为online</span>storcli /c0/e252/s1 <span class="token builtin class-name">set</span> online<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="磁盘初始化"><a href="#磁盘初始化" class="headerlink" title="磁盘初始化"></a>磁盘初始化</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看正在初始化的磁盘</span>storcli /cx/ex/sx show initialization<span class="token comment"># 磁盘开始初始化</span>storcli /cx/ex/sx start initialization<span class="token comment"># 停止磁盘的初始化</span>storcli /cx/ex/sx stop initialization<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="raid操作"><a href="#raid操作" class="headerlink" title="raid操作"></a>raid操作</h4><h5 id="查看raid"><a href="#查看raid" class="headerlink" title="查看raid"></a>查看raid</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看控制器上的所有</span>storcli /call/vall show<span class="token comment"># 查看具体的RAID虚拟设备号为1的详细信息</span>storcli /c0/v1 show all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/medias/storcli%E7%94%A8%E6%B3%95/image-20230724144808893.png"></p><h5 id="新建raid"><a href="#新建raid" class="headerlink" title="新建raid"></a>新建raid</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">storcli /cx <span class="token function">add</span> vd r<span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">5</span><span class="token operator">|</span><span class="token number">6</span><span class="token operator">|</span>00<span class="token operator">|</span><span class="token number">10</span><span class="token operator">|</span><span class="token number">50</span><span class="token operator">|</span><span class="token number">60</span><span class="token punctuation">]</span>        <span class="token punctuation">[</span>Size<span class="token operator">=</span><span class="token operator">&lt;</span>VD1_Sz<span class="token operator">&gt;</span>,<span class="token operator">&lt;</span>VD2_Sz<span class="token operator">&gt;</span>,<span class="token punctuation">..</span><span class="token operator">|</span>remaining<span class="token punctuation">]</span> <span class="token punctuation">[</span>name<span class="token operator">=</span><span class="token operator">&lt;</span>VDNAME<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>,<span class="token punctuation">..</span><span class="token punctuation">]</span>        <span class="token assign-left variable">drives</span><span class="token operator">=</span><span class="token punctuation">[</span>e:<span class="token punctuation">]</span>s<span class="token operator">|</span><span class="token punctuation">[</span>e:<span class="token punctuation">]</span>s-x<span class="token operator">|</span><span class="token punctuation">[</span>e:<span class="token punctuation">]</span>s-x,y <span class="token punctuation">[</span>PDperArray<span class="token operator">=</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>SED<span class="token punctuation">]</span>        <span class="token punctuation">[</span>pdcache<span class="token operator">=</span>on<span class="token operator">|</span>off<span class="token operator">|</span>default<span class="token punctuation">]</span><span class="token punctuation">[</span>pi<span class="token punctuation">]</span><span class="token punctuation">[</span>DimmerSwitch<span class="token punctuation">(</span>ds<span class="token punctuation">)</span><span class="token operator">=</span>default<span class="token operator">|</span>automatic<span class="token punctuation">(</span>auto<span class="token punctuation">)</span><span class="token operator">|</span>        none<span class="token operator">|</span>maximum<span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token operator">|</span>MaximumWithoutCaching<span class="token punctuation">(</span>maxnocache<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span>WT<span class="token operator">|</span>WB<span class="token operator">|</span>AWB<span class="token punctuation">]</span><span class="token punctuation">[</span>nora<span class="token operator">|</span>ra<span class="token punctuation">]</span>        <span class="token punctuation">[</span>direct<span class="token operator">|</span>cached<span class="token punctuation">]</span> <span class="token punctuation">[</span>cachevd<span class="token punctuation">]</span> <span class="token punctuation">[</span>unmap<span class="token punctuation">]</span><span class="token punctuation">[</span>Strip<span class="token operator">=</span><span class="token operator">&lt;</span><span class="token number">8</span><span class="token operator">|</span><span class="token number">16</span><span class="token operator">|</span><span class="token number">32</span><span class="token operator">|</span><span class="token number">64</span><span class="token operator">|</span><span class="token number">128</span><span class="token operator">|</span><span class="token number">256</span><span class="token operator">|</span><span class="token number">512</span><span class="token operator">|</span><span class="token number">102</span><span class="token operator"><span class="token file-descriptor important">4</span>&gt;</span><span class="token punctuation">]</span>         <span class="token punctuation">[</span>AfterVd<span class="token operator">=</span>X<span class="token punctuation">]</span> <span class="token punctuation">[</span>EmulationType<span class="token operator">=</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>Spares <span class="token operator">=</span> <span class="token punctuation">[</span>e:<span class="token punctuation">]</span>s<span class="token operator">|</span><span class="token punctuation">[</span>e:<span class="token punctuation">]</span>s-x<span class="token operator">|</span><span class="token punctuation">[</span>e:<span class="token punctuation">]</span>s-x,y<span class="token punctuation">]</span>        <span class="token punctuation">[</span>force<span class="token punctuation">]</span><span class="token punctuation">[</span>ExclusiveAccess<span class="token punctuation">]</span> <span class="token punctuation">[</span>Cbsize<span class="token operator">=</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span> <span class="token assign-left variable">Cbmode</span><span class="token operator">=</span><span class="token number">0</span><span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token operator">|</span><span class="token number">3</span><span class="token operator">|</span><span class="token number">4</span><span class="token operator">|</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token comment"># 使用默认参数创建的RAID5 读策略为ra: Read ahead 写策略wt io策略为direct 条带大小为256</span>storcli /c0 <span class="token function">add</span> vd r5 <span class="token assign-left variable">size</span><span class="token operator">=</span>all <span class="token assign-left variable">name</span><span class="token operator">=</span>Araid5 <span class="token assign-left variable">drives</span><span class="token operator">=</span><span class="token number">252</span>:0-11<span class="token comment"># 设置读写策略条带大小的RAID5</span>storcli /c0 <span class="token function">add</span> vd r5 <span class="token assign-left variable">size</span><span class="token operator">=</span>all <span class="token assign-left variable">name</span><span class="token operator">=</span>Araid5 <span class="token assign-left variable">drives</span><span class="token operator">=</span><span class="token number">252</span>:0-11 awb ra <span class="token assign-left variable">strip</span><span class="token operator">=</span><span class="token number">1024</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="删除raid"><a href="#删除raid" class="headerlink" title="删除raid"></a>删除raid</h5><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看对应的vd号</span>storcli /call/vall show<span class="token comment"># 删除raid</span>storcli /c0/vall del<span class="token comment"># 删除含有用户数据（mbr或者分区信息）的raid</span>storcli /cx/vx del force<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="raid缓存设置"><a href="#raid缓存设置" class="headerlink" title="raid缓存设置"></a>raid缓存设置</h5><p><strong>WT：</strong>Write Through。在写入缓存的同时，也将数据写入到背后的存储设备。这种方式可以提高数据的安全性，因为即使缓存失效，数据已经被保存在存储设备上。但是，它的缺点是写入操作的速度会受到存储设备速度的限制。</p><p><strong>WB：</strong>Write Back。先将数据写入到缓存中，当缓存满时或者有空闲的机会时，再将数据写入到背后的存储设备。这种方式的优点是写入操作的速度会非常快，因为它只受到缓存速度的限制。但是，它的缺点是如果缓存突然失效（例如，由于电源中断），那么尚未写入到存储设备的数据会丢失。</p><p><strong>AWB：</strong>Adaptive Write Back。这是一种混合策略，它会根据实际的工作负载和情况自动选择使用 Write Through 还是 Write Back 策略。这种方式旨在平衡数据的安全性和写入性能==（一般为raid卡含有电池的情况下会开启写缓存）==。</p><p><strong>RA：</strong>Read-Ahead。这是一种预读策略，当系统从硬盘读取数据时，会预先读取更多的数据到缓存中，预期这些数据会在接下来的操作中被使用。这种策略利用了程序访问数据的局部性原理，可以显著提高连续读取的性能，因为从缓存读取数据比直接从硬盘读取数据要快得多。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 设置写入缓存前需要先设置io优先级为缓存</span>storcli /cx/vx <span class="token builtin class-name">set</span> <span class="token assign-left variable">iopolicy</span><span class="token operator">=</span>direct<span class="token operator">|</span>cached<span class="token comment"># 设置写入缓存语法</span>storcli /cx/vx <span class="token builtin class-name">set</span> <span class="token assign-left variable">wrcache</span><span class="token operator">=</span>wt<span class="token operator">|</span>wb<span class="token operator">|</span>awb<span class="token comment"># 设置读缓存语法，nora不预读，ra预读</span>storcli /cx/vx <span class="token builtin class-name">set</span> <span class="token assign-left variable">racache</span><span class="token operator">=</span>nora<span class="token operator">|</span>ra<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="raid初始化"><a href="#raid初始化" class="headerlink" title="raid初始化"></a>raid初始化</h5><p>RAID5（5块以上）和RAID6（6块以上）在进行快速初始化时会转到后台进行初始化。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看快速初始化</span>storcli /cx/vx show init<span class="token comment"># 开启快速初始化</span>storcli /cx/vx start init<span class="token comment"># 开启完全初始化</span>storcli /cx/vx start init full<span class="token comment"># 停止初始化</span>storcli /cx/vx stop init<span class="token comment"># 查看后台初始化</span>storcli /cx/vx show bgi<span class="token comment"># 停止初始化</span>Storcli /all/v1 stop bgi<span class="token comment"># 挂起初始化</span>storcli /call/v1 <span class="token function">suspend</span> bgi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="raid一致性校验"><a href="#raid一致性校验" class="headerlink" title="raid一致性校验"></a>raid一致性校验</h5><p>cc：consistency check 一致性校验</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看初始化</span>storcli /cx/vx show cc<span class="token comment"># 开启初始化</span>storcli /cx/vx start cc<span class="token comment"># 停止初始化</span>storcli /cx/vx stop cc<span class="token comment">## LSIRAID卡自带的一致性校验</span><span class="token comment"># 查看一致性校验执行的具体时间</span>storcli /cx show cc<span class="token comment"># 设置卡自带的一致性校验方式顺序或者并发</span>storcli /cx <span class="token builtin class-name">set</span> <span class="token assign-left variable">consistencycheck</span><span class="token operator">=</span>seq<span class="token operator">|</span>con<span class="token comment"># 关闭卡自带的一致性校验</span>storcli /cx <span class="token builtin class-name">set</span> <span class="token assign-left variable">cc</span><span class="token operator">=</span>off<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="热备"><a href="#热备" class="headerlink" title="热备"></a>热备</h5><p>查看磁盘状态：storcli /c0 /eall/sall show 磁盘状态为UGOOD（unconfig good）空闲盘，磁盘状态为DHS（detect hot spare）为专属热备，磁盘状态为GHS（global hot spare）为全局热备</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 获取dgs号，获取磁盘状态找到ugood的磁盘</span>storcli /call/vall showstorcli /c0 /eall/sall show<span class="token comment"># 添加专属热备</span>storcli /c0/e252/s6 <span class="token function">add</span> hotsparedrive <span class="token assign-left variable">dgs</span><span class="token operator">=</span><span class="token number">0</span><span class="token comment"># 添加全局热备</span>storcli /c0/e252/s6 <span class="token function">add</span> hotsparedrive<span class="token comment"># 删除热备</span>storcli /c0/ex/sx delete hotsparedrive<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 清除所有日志事件</span>storcli /cx <span class="token function">clear</span> events<span class="token comment"># 将日志信息保存到指定文件</span>storcli /cx show events <span class="token assign-left variable">file</span><span class="token operator">=</span>/path/file<span class="token comment"># 删除TTY（用于故障定位的固件输出信息） 日志</span>storcli /cx delete termlog<span class="token comment"># 查看产生日志文件的历史信息</span>storcli /cx show eventloginfo<span class="token comment"># 查看term log 日志配置或者日志信息</span>storcli /cx show termlog <span class="token assign-left variable">type</span><span class="token operator">=</span>config<span class="token operator">|</span>contents<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="异常ubad恢复"><a href="#异常ubad恢复" class="headerlink" title="异常ubad恢复"></a>异常ubad恢复</h4><p>1、磁盘状态为UBad</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">storcli /cx/ex/sall show all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/medias/storcli%E7%94%A8%E6%B3%95/image-20230724151430480.png"></p><p>2、重新设置磁盘状态为good</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">storcli /c0/ex/sx <span class="token builtin class-name">set</span> goodstorcli /c1/e252/sall show<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/medias/storcli%E7%94%A8%E6%B3%95/image-20230724153148549.png"></p><p><img src="/medias/storcli%E7%94%A8%E6%B3%95/image-20230724153251689.png"></p><p>3、查看硬盘状态，确认磁盘是否有故障问题（0代表没有故障）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">storcli /c1/e252/sall show all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/medias/storcli%E7%94%A8%E6%B3%95/image-20230724153345664.png"></p><p>4、导入磁盘，检查磁盘状态为重建Rbld</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">storcli /cx/fall <span class="token function">import</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、检查磁盘状态Rbld，检查重建进度</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">storcli /cx/ex/sx showstorcli /c0/e217/sall show rebuild<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/medias/storcli%E7%94%A8%E6%B3%95/image-20230724154028562.png"></p><p><img src="/medias/storcli%E7%94%A8%E6%B3%95/image-20230724154050933.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
